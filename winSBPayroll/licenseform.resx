<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////AAD/n///n/8AAP8P//8P/wAA/gf//gf/
        AAD8B//8B/8AAPwD//wD/wAA/AP//AH/AAD8A//8A/8AAPwD//wD/wAA/Af//Af/AAD8B//8B/8AAPwH
        //wH/wAA/AP//AP/AAD8Af/8Af8AAPwB//wB/wAA/AH//AH/AAD8Af/8Af8AAPwB//wB/wAA/AB//AB/
        AAD8AD/8AD8AAPwAP/wAPwAA/AA//AA/AAD8AD/8AD8AAPwAP/wAPwAA/AA//AA/AAD4AB/4AB8AAPAA
        B/AADwAA4AAH4AAHAADAAAPAAAMAAIAAAYAAAQAAgAABgAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAA8AAAAgDwBgDwBAACAPAGAPAEAAMA8
        A8A8AwAA4AAD4AADAADwAAfwAAcAAPgAD/gADwAA/AA//AA/AAD/AP//AP8AAP///////wAA
</value>
  </data>
</root>